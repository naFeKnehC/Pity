{
	"compilerOptions": {
		// 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
		"allowSyntheticDefaultImports": true,
		// 重定向输出目录
		"outDir": "./dist/",
		//接受JavaScript做为输入
		//    "allowJs": true,
		// 生成相应的 .map文件
		"sourceMap": true,
		// 模块引入方式
		"module": "esnext",
		// 指定ECMAScript目标版本
		"target": "es6",
		// 决定如何处理模块
		"moduleResolution": "node",
		// 编译过程中需要引入的库文件的列表。
		"lib": [
			"esnext",
			"dom"
		],
		//忽略所有库中的声明文件（ *.d.ts）的类型检查。
		"skipLibCheck": true,
		// 在 .tsx文件里支持JSX
		"jsx": "react",
		/* 严格的类型检查选项 */
		// 启用所有严格类型检查选项,
		"strict": true,
		// 在表达式和声明上有隐含的 any类型时报错
		"noImplicitAny": true,
		// 启用严格的 null 检查
		"strictNullChecks": true,
		// 当 this 表达式值为 any 类型的时候，生成一个错误
		"noImplicitThis": true,
		// 以严格模式检查每个模块，并在每个文件里加入 'use strict'
		"alwaysStrict": true
	},
	"include": [
		// 这个表示处理根目录的src目录下所有的.ts和.tsx文件，并不是所有文件
		"./src/**/*",
		"./declaration.d.ts"
	]
}
